<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangxuele.tool.push.dao.TPushHistoryMapper">
  <resultMap id="BaseResultMap" type="com.fangxuele.tool.push.domain.TPushHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="msg_id" jdbcType="INTEGER" property="msg_id" />
    <result column="msg_type" jdbcType="INTEGER" property="msg_type" />
    <result column="msg_primary" jdbcType="VARCHAR" property="msg_primary" />
    <result column="msg_data" jdbcType="VARCHAR" property="msg_data" />
    <result column="create_time" jdbcType="VARCHAR" property="create_time" />
    <result column="modified_time" jdbcType="VARCHAR" property="modified_time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, msg_id, msg_type, msg_primary, msg_data, create_time, modified_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_push_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_push_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangxuele.tool.push.domain.TPushHistory">
    insert into t_push_history (id, msg_id, msg_type, 
      msg_primary, msg_data, create_time, 
      modified_time)
    values (#{id,jdbcType=INTEGER}, #{msg_id,jdbcType=INTEGER}, #{msg_type,jdbcType=INTEGER}, 
      #{msg_primary,jdbcType=VARCHAR}, #{msg_data,jdbcType=VARCHAR}, #{create_time,jdbcType=VARCHAR}, 
      #{modified_time,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fangxuele.tool.push.domain.TPushHistory">
    insert into t_push_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="msg_id != null">
        msg_id,
      </if>
      <if test="msg_type != null">
        msg_type,
      </if>
      <if test="msg_primary != null">
        msg_primary,
      </if>
      <if test="msg_data != null">
        msg_data,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="modified_time != null">
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="msg_id != null">
        #{msg_id,jdbcType=INTEGER},
      </if>
      <if test="msg_type != null">
        #{msg_type,jdbcType=INTEGER},
      </if>
      <if test="msg_primary != null">
        #{msg_primary,jdbcType=VARCHAR},
      </if>
      <if test="msg_data != null">
        #{msg_data,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=VARCHAR},
      </if>
      <if test="modified_time != null">
        #{modified_time,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangxuele.tool.push.domain.TPushHistory">
    update t_push_history
    <set>
      <if test="msg_id != null">
        msg_id = #{msg_id,jdbcType=INTEGER},
      </if>
      <if test="msg_type != null">
        msg_type = #{msg_type,jdbcType=INTEGER},
      </if>
      <if test="msg_primary != null">
        msg_primary = #{msg_primary,jdbcType=VARCHAR},
      </if>
      <if test="msg_data != null">
        msg_data = #{msg_data,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=VARCHAR},
      </if>
      <if test="modified_time != null">
        modified_time = #{modified_time,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangxuele.tool.push.domain.TPushHistory">
    update t_push_history
    set msg_id = #{msg_id,jdbcType=INTEGER},
      msg_type = #{msg_type,jdbcType=INTEGER},
      msg_primary = #{msg_primary,jdbcType=VARCHAR},
      msg_data = #{msg_data,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=VARCHAR},
      modified_time = #{modified_time,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>